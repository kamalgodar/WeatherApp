{"version":3,"sources":["components/Header.js","components/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Weather","useState","city","setCity","search","setSearch","weatherApi","a","fetch","response","json","data","main","useEffect","class","value","type","placeholder","onChange","event","target","onClick","Date","toLocaleDateString","temp","humidity","pressure","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAiBeA,EATA,WACX,OACA,qBAAKC,UAAU,oBAAf,SACI,oBAAIA,UAAU,aAAd,2B,8BC0EOC,EA5EC,WACZ,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,aAArC,mBAAOG,EAAP,KAAeC,EAAf,KAGMC,EAAU,uCAAG,8BAAAC,EAAA,sEACQC,MAAM,GAAD,OAXpB,kDAWoB,cAAiBJ,EAAjB,kBAVpB,mCAUoB,kBARvB,WAOU,cACTK,EADS,gBAEIA,EAASC,OAFb,OAETC,EAFS,OAGfR,EAAQQ,EAAKC,MAHE,2CAAH,qDAYhB,OAJAC,qBAAU,WACNP,MACD,CAACF,IAGA,sBAAKU,MAAM,+CAAX,UACI,sBAAKf,UAAU,MAAf,UACI,qBAAKA,UAAU,oCAAf,SACA,uBAAOgB,MAAOX,EAAQY,KAAK,OAAOjB,UAAU,eAAekB,YAAY,kBAAkBC,SAAU,SAACC,GAAYd,EAAUc,EAAMC,OAAOL,YAEvI,qBAAKhB,UAAU,MAAf,SACI,wBAAQA,UAAU,kBAAkBsB,QAASf,EAA7C,yBAKNJ,EAGE,qBAAKH,UAAU,wBAAf,SACA,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,oCAAf,UACI,mBAAGe,MAAM,8BACT,qDAAiC,sBAAMA,MAAM,KAAZ,qBAA+B,IAAIQ,MAAOC,6BAInF,qBAAKxB,UAAU,WAAf,SACI,sBAAKA,UAAU,oCAAf,UACI,mBAAGA,UAAU,8BAAb,eACA,qDAAiC,sBAAMe,MAAM,KAAZ,oBAAjC,IAAiEV,UAIzE,qBAAKL,UAAU,WAAf,SACI,sBAAKA,UAAU,oCAAf,UACA,mBAAGe,MAAM,iCACT,qDAAiC,sBAAMA,MAAM,KAAZ,0BAAjC,IAAuEZ,EAAKsB,KAA5E,gBAIJ,qBAAKzB,UAAU,WAAf,SACI,sBAAKA,UAAU,oCAAf,UACA,mBAAGe,MAAM,0BACT,qDAAiC,sBAAMA,MAAM,KAAZ,uBAAjC,IAAoEZ,EAAKuB,SAAzE,YAIJ,qBAAK1B,UAAU,WAAf,SACI,sBAAKA,UAAU,oCAAf,UACA,mBAAGA,UAAU,kCACb,qDAAiC,sBAAMe,MAAM,KAAZ,uBAAjC,IAAkF,OAAdZ,EAAKwB,SAAzE,kBAnCR,oDCRDC,MATf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCdSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.d0816fcd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\n// equivalent \r\n// function Header {\r\n\r\n// }\r\n\r\nconst Header = () => {\r\n    return (\r\n    <div className=\"bg-dark px-4 py-3\">\r\n        <h3 className=\"text-white\">My Weather</h3>\r\n    </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Header;\r\n// export { Header };","import React, {useEffect, useState} from 'react'\r\nimport './Weather.css';\r\n\r\n\r\nconst API_URL = \"https://api.openweathermap.org/data/2.5/weather\";\r\nconst API_KEY = \"c11ab223bb4e952021543ca59b912943\";\r\n// const API_KEY = \"35a2242c1a0a47b35674e09e89078fa8\";\r\nconst UNIT = \"metric\";\r\n\r\nconst Weather = () => {\r\n    const [city, setCity] = useState(\"\");\r\n    const [search, setSearch] = useState(\"Kathmandu\");\r\n\r\n    // useEffect(() => {\r\n    const weatherApi = async () => {\r\n        const response = await fetch(`${API_URL}?q=${search}&appid=${API_KEY}&units=${UNIT}`);\r\n        const data = await response.json();\r\n        setCity(data.main);\r\n    };\r\n        // weatherApi();\r\n    // }, [search])\r\n\r\n    useEffect(() => {\r\n        weatherApi();\r\n    }, [search])\r\n    \r\n    return (\r\n        <div class=\"container d-flex justify-content-center mt-3\">\r\n            <div className='row'>\r\n                <div className='col d-flex justify-content-center'>\r\n                <input value={search} type='text' className='form-control' placeholder='Enter city name' onChange={(event) => { setSearch(event.target.value)} } /> \r\n                </div>\r\n                <div className='col'>\r\n                    <button className='btn btn-primary' onClick={weatherApi}>Search</button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {!city ? (\r\n                <p> No Data Found </p>\r\n                ) : (\r\n                <div className=\"container1 background\">\r\n                <div className='container mt-3'>\r\n                    <div className=\"row\">\r\n                        <div className=\"col d-flex justify-content-center\">\r\n                            <i class=\"far fa-calendar-alt fa-2x\"></i>\r\n                            <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class='h6'>Date: </span>{new Date().toLocaleDateString()}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row mt-3\">\r\n                        <div className=\"col d-flex justify-content-center\">\r\n                            <i className=\"fas fa-map-marker-alt fa-2x\"> </i>\r\n                            <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class='h6'>Place:</span> {search}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row mt-3\">\r\n                        <div className=\"col d-flex justify-content-center\">\r\n                        <i class=\"fas fa-temperature-hot fa-2x\"></i> \r\n                        <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class='h6'>Temperature:</span> {city.temp}Â°C</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row mt-3\">\r\n                        <div className=\"col d-flex justify-content-center\">\r\n                        <i class=\"fas fa-humidity fa-2x\"></i>\r\n                        <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class='h6'>Humidity:</span> {city.humidity}%</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row mt-3\">\r\n                        <div className=\"col d-flex justify-content-center\">\r\n                        <i className=\"fas fa-temperature-high fa-2x\"></i>\r\n                        <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class='h6'>Pressure:</span> {city.pressure*0.02953}Hg</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Weather;\r\n\r\n","import './App.css';\nimport './components/Weather.css';\nimport Header from './components/Header'\nimport Weather from './components/Weather'\n\n//1st\n// function App() {\n//   return <h1>Hello</h1>;\n// }\n\n// 2nd return can return only one react component (JSX- Javascript XML to write html in js file)  eg, here div \n// function App() {\n//   return (\n//     <div>\n//       <h1>Hello</h1>\n//     <p>this is a weather app</p>\n//     </div>\n//   )\n// }\n\n\n// 2nd\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Weather />\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\"; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}